{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","marginLeft","setMarginLeft","leftSide","length","stepLength","className","style","width","transform","transition","map","image","index","src","alt","marginRight","type","cn","onClick","Math","min","max","App","setFrameSize","setStep","setItemWidth","setAnimationDuration","htmlFor","name","id","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"2OAsFeA,EA1EmB,SAAC,GAM5B,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,kBAEA,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAIMC,IAAaL,EAFC,KAE2BH,EAAOS,OAASP,GAGzDQ,EAAaT,GAAQE,EALP,IAepB,OACE,sBACEQ,UAAU,WACVC,MAAO,CAAEC,MAAOX,GAAaC,EAlBb,QAgBlB,UAIE,oBACEQ,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,OAAgBR,EAAhB,OACTS,WAAW,aAAD,OAAeX,EAAf,OAJd,SAOGJ,EAAOgB,KAAI,SAACC,EAAOC,GAAR,OACV,6BAGE,qBACEC,IAAKF,EACLG,IAAG,UAAKF,EAAQ,GAChBN,MAAO,CACLC,MAAOV,EACPkB,YApCM,OA6BLJ,QAcX,sBAAKN,UAAU,mBAAf,UACE,wBACEW,KAAK,SACLX,UAAWY,IAAG,SA3CJ,IA2CcjB,GAA4B,YACpDkB,QApCU,WAChBjB,EAAckB,KAAKC,IAAIpB,EAAaI,EATpB,KAyCZ,SAKG,MAGH,wBACE,UAAQ,OACRY,KAAK,SACLX,UAAWY,IAAG,SAAUjB,IAAeE,GAAY,YACnDgB,QAjDW,WACjBjB,EAAckB,KAAKE,IAAIrB,EAAaI,EAAYF,KA4C5C,SAMG,aC1ELR,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAgHa4B,EA7GO,WACpB,MAAkCvB,mBAAS,GAA3C,mBAAOH,EAAP,KAAkB2B,EAAlB,KACA,EAAwBxB,mBAAS,GAAjC,mBAAOJ,EAAP,KAAa6B,EAAb,KACA,EAAkCzB,mBAAS,KAA3C,mBAAOF,EAAP,KAAkB4B,EAAlB,KACA,EAAkD1B,mBAAS,KAA3D,mBAAOD,EAAP,KAA0B4B,EAA1B,KAEA,OACE,sBAAKrB,UAAU,MAAf,UACE,oBACEA,UAAU,QACV,UAAQ,QAFV,iCAIoBX,EAAOS,OAJ3B,aAOA,uBAAME,UAAU,YAAhB,UACE,wBACEsB,QAAQ,YACRtB,UAAU,aAFZ,wBAME,uBACEA,UAAU,aACVW,KAAK,SACLY,KAAK,YACLC,GAAG,YACHT,IAAK,GACLC,IAAK,IACLS,MAAOjC,EACPkC,SAAU,SAACC,GACTP,GAAcO,EAAMC,OAAOH,aAKjC,wBACEH,QAAQ,YACRtB,UAAU,aAFZ,wBAME,uBACEA,UAAU,aACVW,KAAK,SACLY,KAAK,YACLC,GAAG,YACHT,IAAK,EACLC,IAAK,GACLS,MAAOlC,EACPmC,SAAU,SAACC,GACTT,GAAcS,EAAMC,OAAOH,aAKjC,wBACEH,QAAQ,OACRtB,UAAU,aAFZ,kBAME,uBACEA,UAAU,aACVW,KAAK,SACLY,KAAK,OACLC,GAAG,OACHT,IAAK,EACLC,IAAK,EACLS,MAAOnC,EACPoC,SAAU,SAACC,GACTR,GAASQ,EAAMC,OAAOH,aAK5B,wBACEH,QAAQ,oBACRtB,UAAU,aAFZ,gCAME,uBACEA,UAAU,aACVW,KAAK,SACLY,KAAK,oBACLC,GAAG,oBACHT,IAAK,IACLC,IAAK,IACL1B,KAAM,IACNmC,MAAOhC,EACPiC,SAAU,SAACC,GACTN,GAAsBM,EAAMC,OAAOH,gBAM3C,cAAC,EAAD,CACEpC,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,QCtH3BoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2b513cbc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [marginLeft, setMarginLeft] = useState(0);\n\n  const marginRight = 30;\n\n  const leftSide = -(itemWidth + marginRight) * (images.length - frameSize);\n  const rightSide = 0;\n\n  const stepLength = step * (itemWidth + marginRight);\n\n  const slideRight = () => {\n    setMarginLeft(Math.max(marginLeft - stepLength, leftSide));\n  };\n\n  const slideLeft = () => {\n    setMarginLeft(Math.min(marginLeft + stepLength, rightSide));\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: frameSize * (itemWidth + marginRight) - marginRight }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          transform: `translateX(${marginLeft}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              style={{\n                width: itemWidth,\n                marginRight,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"button-container\">\n        <button\n          type=\"button\"\n          className={cn('button', marginLeft === rightSide && 'disabled')}\n          onClick={slideLeft}\n        >\n          {' '}\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className={cn('button', marginLeft === leftSide && 'disabled')}\n          onClick={slideRight}\n        >\n          {' '}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n\n  return (\n    <div className=\"App\">\n      <h1\n        className=\"title\"\n        data-cy=\"title\"\n      >\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <form className=\"App__form\">\n        <label\n          htmlFor=\"itemWidth\"\n          className=\"App__label\"\n        >\n          Item width:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemWidth\"\n            min={80}\n            max={200}\n            value={itemWidth}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setItemWidth(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameSize\"\n          className=\"App__label\"\n        >\n          Frame size:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameSize\"\n            min={1}\n            max={10}\n            value={frameSize}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setFrameSize(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"step\"\n          className=\"App__label\"\n        >\n          Step:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"step\"\n            id=\"step\"\n            min={1}\n            max={9}\n            value={step}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setStep(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animationDuration\"\n          className=\"App__label\"\n        >\n          Animation duration:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            min={250}\n            max={5000}\n            step={250}\n            value={animationDuration}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setAnimationDuration(+event.target.value);\n            }}\n          />\n        </label>\n      </form>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}