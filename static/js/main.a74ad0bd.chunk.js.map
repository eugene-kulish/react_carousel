{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","marginLeft","setMarginLeft","leftSide","length","stepLength","className","style","width","gap","transform","transition","map","image","index","src","alt","height","type","cn","onClick","Math","min","max","getCountInRange","value","number","App","useState","inputs","setInputs","onChange","event","target","name","prevInputs","htmlFor","id","ReactDOM","render","document","getElementById"],"mappings":"yPA0FeA,EA5EmB,SAAC,GAQ5B,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,KACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAIMC,IAAaJ,EAFC,KAE2BH,EAAOQ,OAASN,GAGzDO,EAAaR,GAAQE,EALP,IAepB,OACE,sBACEO,UAAU,WACVC,MAAO,CAAEC,MAAOV,GAAaC,EAlBb,QAgBlB,UAIE,oBACEO,UAAU,iBACVC,MAAO,CACLE,IAAK,GACLC,UAAU,cAAD,OAAgBT,EAAhB,OACTU,WAAW,aAAD,OAAeX,EAAf,OALd,SAQGJ,EAAOgB,KAAI,SAACC,EAAOC,GAAR,OACV,6BAGE,qBACEC,IAAKF,EACLG,IAAG,UAAKF,EAAQ,GAChBN,MAAOT,EACPQ,MAAO,CACLC,MAAOT,EACPkB,OAAQlB,MARPc,QAeX,sBAAKP,UAAU,mBAAf,UACE,wBACEY,KAAK,SACLZ,UAAWa,IAAG,SA7CJ,IA6CclB,GAA4B,YACpDmB,QAtCU,WAChBlB,EAAcmB,KAAKC,IAAIrB,EAAaI,EATpB,KA2CZ,SAKG,MAGH,wBACE,UAAQ,OACRa,KAAK,SACLZ,UAAWa,IAAG,SAAUlB,IAAeE,GAAY,YACnDiB,QAnDW,WACjBlB,EAAcmB,KAAKE,IAAItB,EAAaI,EAAYF,KA8C5C,SAMG,aC9ELP,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGI4B,EAAkB,SAACC,EAAeF,EAAaD,GACnD,IAAMI,GAAUD,EAEhB,OAAIC,EAASH,EACJA,EAGLG,EAASJ,EACJA,EAGFI,GAyIMC,EAtIO,WACpB,MAA4BC,mBAAS,CACnC9B,UAAW,EACXD,KAAM,EACNE,UAAW,IACXC,kBAAmB,MAJrB,mBAAO6B,EAAP,KAAeC,EAAf,KAMA,EAAoCF,mBAAS,GAA7C,mBAAO3B,EAAP,KAAmBC,EAAnB,KAEM6B,EAAW,SAACC,GAChB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMT,EAAd,EAAcA,MAEdK,GAAU,SAAAK,GAAU,kCACfA,GADe,kBAEjBD,EAAQV,EAAgBC,EAAO,GAAI,SAuBxC,OACE,sBAAKnB,UAAU,MAAf,UACE,oBACEA,UAAU,QACV,UAAQ,QAFV,iCAIoBV,EAAOQ,OAJ3B,aAOA,uBAAME,UAAU,YAAhB,UACE,wBACE8B,QAAQ,SACR9B,UAAU,aAFZ,wBAME,uBACEA,UAAU,aACVY,KAAK,SACLgB,KAAK,YACLG,GAAG,SACHf,IAAK,GACLC,IAAK,IACLE,MAAOI,EAAO9B,UACdgC,SA3CY,SAACC,GACrB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMT,EAAd,EAAcA,MAEdK,GAAU,SAAAK,GAAU,kCACfA,GADe,kBAEjBD,EAAQV,EAAgBC,EAAO,IAAK,SAEvCvB,EAAc,SAwCV,wBACEkC,QAAQ,UACR9B,UAAU,aAFZ,wBAME,uBACEA,UAAU,aACVY,KAAK,SACLgB,KAAK,YACLG,GAAG,UACHf,IAAK,EACLC,IAAK,GACLE,MAAOI,EAAO/B,UACdiC,SAAUA,OAId,wBACEK,QAAQ,SACR9B,UAAU,aAFZ,kBAME,uBACEA,UAAU,aACVY,KAAK,SACLgB,KAAK,OACLG,GAAG,SACHf,IAAK,EACLC,IAAK,EACLE,MAAOI,EAAOhC,KACdkC,SAAUA,OAId,wBACEK,QAAQ,oBACR9B,UAAU,aAFZ,gCAME,uBACEA,UAAU,aACVY,KAAK,SACLgB,KAAK,oBACLG,GAAG,oBACHf,IAAK,IACLC,IAAK,IACL1B,KAAM,IACN4B,MAAOI,EAAO7B,kBACd+B,SAxFe,SAACC,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMT,EAAd,EAAcA,MAEdK,GAAU,SAAAK,GAAU,kCACfA,GADe,kBAEjBD,EAAQV,EAAgBC,EAAO,IAAM,mBAwFtC,cAAC,EAAD,CACE7B,OAAQA,EACRC,KAAMgC,EAAOhC,KACbC,UAAW+B,EAAO/B,UAClBC,UAAW8B,EAAO9B,UAClBC,kBAAmB6B,EAAO7B,kBAC1BC,WAAYA,EACZC,cAAeA,QC7JvBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a74ad0bd.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  marginLeft: number,\n  setMarginLeft: (marginLeft: number) => void,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  marginLeft,\n  setMarginLeft,\n}) => {\n  const marginRight = 30;\n\n  const leftSide = -(itemWidth + marginRight) * (images.length - frameSize);\n  const rightSide = 0;\n\n  const stepLength = step * (itemWidth + marginRight);\n\n  const slideRight = () => {\n    setMarginLeft(Math.max(marginLeft - stepLength, leftSide));\n  };\n\n  const slideLeft = () => {\n    setMarginLeft(Math.min(marginLeft + stepLength, rightSide));\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: frameSize * (itemWidth + marginRight) - marginRight }}\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          gap: 30,\n          transform: `translateX(${marginLeft}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n      >\n        {images.map((image, index) => (\n          <li\n            key={image}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n              style={{\n                width: itemWidth,\n                height: itemWidth,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"button-container\">\n        <button\n          type=\"button\"\n          className={cn('button', marginLeft === rightSide && 'disabled')}\n          onClick={slideLeft}\n        >\n          {' '}\n        </button>\n\n        <button\n          data-cy=\"next\"\n          type=\"button\"\n          className={cn('button', marginLeft === leftSide && 'disabled')}\n          onClick={slideRight}\n        >\n          {' '}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst getCountInRange = (value: string, max: number, min: number) => {\n  const number = +value;\n\n  if (number > max) {\n    return max;\n  }\n\n  if (number < min) {\n    return min;\n  }\n\n  return number;\n};\n\nconst App: React.FC = () => {\n  const [inputs, setInputs] = useState({\n    frameSize: 3,\n    step: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  });\n  const [marginLeft, setMarginLeft] = useState(0);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: (getCountInRange(value, 10, 1)),\n    }));\n  };\n\n  const onChangeWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: (getCountInRange(value, 200, 80)),\n    }));\n    setMarginLeft(0);\n  };\n\n  const onChangeDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: (getCountInRange(value, 5000, 250)),\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1\n        className=\"title\"\n        data-cy=\"title\"\n      >\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <form className=\"App__form\">\n        <label\n          htmlFor=\"itemId\"\n          className=\"App__label\"\n        >\n          Item width:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemId\"\n            min={80}\n            max={200}\n            value={inputs.itemWidth}\n            onChange={onChangeWidth}\n          />\n        </label>\n\n        <label\n          htmlFor=\"frameId\"\n          className=\"App__label\"\n        >\n          Frame size:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameId\"\n            min={1}\n            max={10}\n            value={inputs.frameSize}\n            onChange={onChange}\n          />\n        </label>\n\n        <label\n          htmlFor=\"stepId\"\n          className=\"App__label\"\n        >\n          Step:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"step\"\n            id=\"stepId\"\n            min={1}\n            max={9}\n            value={inputs.step}\n            onChange={onChange}\n          />\n        </label>\n\n        <label\n          htmlFor=\"animationDuration\"\n          className=\"App__label\"\n        >\n          Animation duration:\n\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            min={250}\n            max={5000}\n            step={250}\n            value={inputs.animationDuration}\n            onChange={onChangeDuration}\n          />\n        </label>\n      </form>\n\n      <Carousel\n        images={images}\n        step={inputs.step}\n        frameSize={inputs.frameSize}\n        itemWidth={inputs.itemWidth}\n        animationDuration={inputs.animationDuration}\n        marginLeft={marginLeft}\n        setMarginLeft={setMarginLeft}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}